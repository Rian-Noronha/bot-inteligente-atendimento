services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: bot_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bot_atendimento_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: bot_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    
  ai_service:
    build: ./services/ai_service
    container_name: bot_ai_service
    env_file:
      - ./services/ai_service/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - ./services/ai_service:/app
      - /app/venv

  backend:
    build: ./backend
    container_name: bot_backend
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - ai_service
    restart: unless-stopped
    volumes:
      - ./backend:/usr/src/app
      # Proteger a pasta node_modules de dentro do contÃªiner
      - /usr/src/app/node_modules

  frontend:
    build: 
      context: ./front
      dockerfile: Dockerfile.dev
    container_name: bot_frontend
    ports:
      - "5173:5173" 
    depends_on:
      - backend
    restart: unless-stopped
    volumes: 
      - ./front:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data: